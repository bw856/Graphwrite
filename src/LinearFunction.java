/*
 Created by Brandon Wang
 May 29, 2019
*/

import java.awt.BasicStroke;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.Stroke;

public class LinearFunction extends javax.swing.JFrame {

    // Global slope and intercept used throughout
    double slope;   
    double intercept;

    public LinearFunction() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFunction = new javax.swing.JLabel();
        txtFunction = new javax.swing.JTextField();
        lblSlope = new javax.swing.JLabel();
        lblIntercept = new javax.swing.JLabel();
        txtIntercept = new javax.swing.JTextField();
        txtSlope = new javax.swing.JTextField();
        btnGraph = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblPleaseEnter = new javax.swing.JLabel();
        pnlDesc = new javax.swing.JPanel();
        LinearDescription = new javax.swing.JLabel();
        pnlGraph = new javax.swing.JPanel();
        btnToV = new javax.swing.JButton();
        NumbersOnly = new javax.swing.JLabel();
        btnLinearQuiz = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(550, 100, 0, 0));

        lblFunction.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        lblFunction.setText("Linear Function");

        txtFunction.setEditable(false);
        txtFunction.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        txtFunction.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFunction.setText("y=mx+b");

        lblSlope.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        lblSlope.setText("Slope (m):");

        lblIntercept.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        lblIntercept.setText("y-intercept (b):");

        txtIntercept.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N

        txtSlope.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N

        btnGraph.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        btnGraph.setText("Graph");
        btnGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraphActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setEnabled(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblPleaseEnter.setFont(new java.awt.Font("Tw Cen MT", 2, 18)); // NOI18N
        lblPleaseEnter.setText("Please enter the parameters of the function:");

        pnlDesc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LinearDescription.setBackground(new java.awt.Color(255, 255, 255));
        LinearDescription.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        LinearDescription.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LinearDescription.setText("<html>Linear Functions are relationships in which when graphed, form a straight line; a relationship of direct proportionality.   \n<br>A Linear function has one independent variable (x) and one dependent variable (y).  \n<br>Linear functions follow the 'slope-intercept' form:\n<br><b> y = mx + b  </b>\n<br>\"b\" is the constant term or the y-intercept.   \n<br>\"m\" is the coefficient of the independent variable, also known as the slope.  </html>");
        LinearDescription.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout pnlDescLayout = new javax.swing.GroupLayout(pnlDesc);
        pnlDesc.setLayout(pnlDescLayout);
        pnlDescLayout.setHorizontalGroup(
            pnlDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDescLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LinearDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlDescLayout.setVerticalGroup(
            pnlDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LinearDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
        );

        pnlGraph.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pnlGraphLayout = new javax.swing.GroupLayout(pnlGraph);
        pnlGraph.setLayout(pnlGraphLayout);
        pnlGraphLayout.setHorizontalGroup(
            pnlGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 513, Short.MAX_VALUE)
        );
        pnlGraphLayout.setVerticalGroup(
            pnlGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 304, Short.MAX_VALUE)
        );

        btnToV.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        btnToV.setText("<html>Open Table of Values");
        btnToV.setEnabled(false);
        btnToV.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnToV.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnToV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToVActionPerformed(evt);
            }
        });

        NumbersOnly.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        NumbersOnly.setForeground(new java.awt.Color(255, 0, 0));
        NumbersOnly.setText("<html>");

        btnLinearQuiz.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        btnLinearQuiz.setText("Take the Quiz");
        btnLinearQuiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinearQuizActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 89, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(pnlDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(pnlGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnToV, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnReset))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFunction)
                        .addGap(194, 194, 194)
                        .addComponent(btnLinearQuiz)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPleaseEnter)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblIntercept)
                                    .addComponent(lblSlope))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIntercept, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSlope, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addComponent(NumbersOnly, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFunction)
                    .addComponent(btnBack)
                    .addComponent(btnLinearQuiz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(NumbersOnly, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnToV, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnReset)
                        .addGap(119, 119, 119))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPleaseEnter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSlope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSlope))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtIntercept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblIntercept))
                                .addGap(10, 10, 10))
                            .addComponent(btnGraph, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(pnlGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void GraphMaker(double m, double b) {
        // Variable delcaration for graphing points
        Graphics2D yVal = (Graphics2D) pnlGraph.getGraphics();
        Double y;
        int width = pnlGraph.getWidth() / 2;
        int height = pnlGraph.getHeight() / 2;

        // Loop using the polygon function to create the graph
        Polygon Point = new Polygon();
        
        for (int x = -500; x <= 500; x++) {
            y = (m * x) + b * 11;
            
            // .addPoint plots a given point
            // Loop creates a path of points after numerous iterations
            Point.addPoint(x + width, height - (int)Math.round(y));
            // Add and subtract by HALF the width and height to begin line at origin
        }
        // Takes the generated points and draws a line through the mapped coordinates
        yVal.drawPolyline(Point.xpoints, Point.ypoints, Point.npoints);
    }
    
    private void btnGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraphActionPerformed
        NumbersOnly.setText(""); // Refreshes text

        //Creates the axis line variables and constrains it to the Graph JPanel
        Graphics2D yAxis = (Graphics2D) pnlGraph.getGraphics();
        Graphics2D xAxis = (Graphics2D) pnlGraph.getGraphics();

        // Uses java Stroke Library 
        // Creates new stroke that looks like a dotted line 
        Stroke dotted_line = new BasicStroke(1, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0, new float[]{3, 8}, 0);

        //Draws the axis of the graph applying the dotted_line stroke 
        yAxis.setStroke(dotted_line);   // sets the stroke 
        yAxis.drawLine(pnlGraph.getWidth() / 2, 0, pnlGraph.getWidth() / 2, pnlGraph.getHeight());  // Draws line, resulting in dots
        xAxis.setStroke(dotted_line);
        xAxis.drawLine(0, pnlGraph.getHeight() / 2, pnlGraph.getWidth(), pnlGraph.getHeight() / 2);

       
        // try{ and }catch Checks to make sure the user is inputting numbers into function Parameters 
        // using NumberFormatException
        try {
            // User input of function paramters (slope and intercept for Linear Function)
            slope = Double.parseDouble(txtSlope.getText());
            intercept = Double.parseDouble(txtIntercept.getText());
            
            // Passes the user inputs through the GraphMaker method
            GraphMaker(slope, intercept);
            
        } catch (NumberFormatException n) {
            NumbersOnly.setText("<html>Please enter <br>numerical values."); // html allows multi-line text
        }
        // Enabling other buttons
        btnToV.setEnabled(true); 
        btnReset.setEnabled(true); 
    }//GEN-LAST:event_btnGraphActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // Refreshes graph
        pnlGraph.updateUI();
        // Disables other buttons
        btnToV.setEnabled(false); 
        btnReset.setEnabled(false); 
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        setVisible(false);  // Hides the Linear Function window
        // Opens Main window (Graphwrite)
        Graphwrite Main = new Graphwrite();
        Main.setVisible(true);          
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnToVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToVActionPerformed
        TableofValues ToV = new TableofValues(); 
        ToV.setVisible(true);   // Opens Table of Values
        // Calls TableCreateLinear() Method in ToV class with parameters slope, intercept
        ToV.TableCreateLinear(slope, intercept);   
    }//GEN-LAST:event_btnToVActionPerformed

    private void btnLinearQuizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLinearQuizActionPerformed
        setVisible(false); // Hides Linear Function menu
        LinearQuiz Quiz = new LinearQuiz(); 
        Quiz.setVisible(true);   // Opens Linear Function Quiz
    
    }//GEN-LAST:event_btnLinearQuizActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LinearFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LinearFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LinearFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LinearFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LinearFunction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LinearDescription;
    private javax.swing.JLabel NumbersOnly;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGraph;
    private javax.swing.JButton btnLinearQuiz;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnToV;
    private javax.swing.JLabel lblFunction;
    private javax.swing.JLabel lblIntercept;
    private javax.swing.JLabel lblPleaseEnter;
    private javax.swing.JLabel lblSlope;
    private javax.swing.JPanel pnlDesc;
    private javax.swing.JPanel pnlGraph;
    private javax.swing.JTextField txtFunction;
    private javax.swing.JTextField txtIntercept;
    private javax.swing.JTextField txtSlope;
    // End of variables declaration//GEN-END:variables
}
